const zh = {
  'lang':'zh',
  "title":"go模块备忘录",
  "quick_start":"快速入门",
  "dep_management":"# 依赖管理",
  "add_dep":"# 添加或更新依赖",
  "specific_version":"# 特殊版本",
  "specific_branch":"# 用特殊分支",
  "upgrade_modules":"# 在子目录中更新所有模块",
  "remove_dep":"# 移除依赖",
  "useful_commands":"# 常用命令",
  "tidy_mod":"# 在 go.mod 和 go.sum 中 添加新模块且移除不用的模块",
  "download_mod":"# 下载模块并缓存",
  "init_module":"# 初始化新模块",
  "why_dep":"# 为什么依赖?",
  "install_binary":"# 构建和安装二进制模块",
  "anatomy_mod":"解析go.mod",
  "mvs":"最小化版本选择 (MVS)",
  "mvs_p1":"要构建一个程序，Go需要确切地知道您需要哪些依赖项，以及使用哪个版本。",
  "mvs_p2":"Go使用MVS作为一种可预测且简单的方法来决定使用哪个版本。",
  "mvs_p3":"它的工作如下:",
  "mvs_ol_li1":"选中运行的模块（主模块）",
  "mvs_ol_li2":"查找主模块需要的所有依赖项（递归地，使用依赖项的go.mod文件）",
  "mvs_ol_li3_1":"对于每个依赖项，使用",
  "mvs_ol_li3_2":"go.mod",
  "mvs_ol_li3_3":"显式指定的最大版本",
  
  "example":"例子",
  "mvs_example_p1":"在例子中, 主版本依赖 <code>A 1.0</code> 和 <code>B 2.1</code>。",
  "mvs_example_p2":"<code>B 2.1</code> 依赖 <code>A 1.1</code>, 使用 <code>A</code> 版本。",
   "mvs_example_p3":"<code>A 1.1</code> 被使用, 它拉取 <code>C 1.1</code> 版本。",
   "mvs_example_p4":"最终依赖如下:",
  "mvs_example_p4_ul_li1":"A 1.1",
  "mvs_example_p4_ul_li2":"B 2.1",
  "mvs_example_p4_ul_li3":"C 1.1",
  "contributions":"贡献在 ",
  "module_path":"本机模块名称",
  "module_version":"Go 版本",
  "new_features":"",
  "v2_later_version":"v2和以后的版本将被使用",
  "pseudo_version_1":"模糊版本依赖不是tag版本就用最近提交",
  "pseudo_version_2":"",
  "incompatible_package_1":"不兼容包意思是没有合并到模块中",
  "incompatible_package_2":"",
  "replace_module":"替换模块",
  "specific_version_1":"排除特殊的版本号",
  "specific_version_2":"",
  "specific_version_3":"",
}

export {zh};